@model PaginatedList<Product>
@{
    var isOutOfStockPage = Context.Request.Query["outOfStock"] == "true";
}
<style>
    img {
        width: 100px;
        height: 100px;
    }

    .button-container {
        display: flex;
        justify-content: flex-end; /* Align to the right */
        margin-top: 20px; /* Adjust as needed */
    }

        .button-container input[type="submit"] {
            margin-left: 10px; /* Add space between the buttons */
        }

        .button-container p {
            margin: 0; /* Remove default margin */
        }

    form p {
        text-align: center;
    }

    input[type=submit] {
        background-color: #4e73df;
        color: white;
        border-radius: 4px;
        cursor: pointer;
        font-size: 16px;
    }

        input[type=submit]:hover {
            background-color: #0337e4;
        }

</style>
<link href="@Url.Content("~/css/Index.css")" rel="stylesheet">
<div class="container">
    <div class="centered text">
        <h2>@ViewBag.Title</h2>
    </div>

    <div class="d-sm-flex align-items-center mb-4 horizontal justify-content-between">
        <form asp-action="Index" method="get" class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
            <div class="input-group">
                <input type="text" class="form-control bg-light border-0 small" name="searchString" placeholder="Search for..." aria-label="Search" aria-describedby="basic-addon2">
                <div class="input-group-append">
                    <button class="btn btn-primary" type="submit">
                        <i class="fas fa-search fa-sm"></i>
                    </button>
                </div>
            </div>
        </form>
        <div>
            <form asp-action="Index" method="get">
                <p>
                    <input type="hidden" name="outOfStock" value="true" />
                    <input type="submit" value="Show Out of Stock Products" />
                </p>
            </form>
            <form asp-action="Index" method="get">
                <p>
                    <input type="hidden" name="lowQuantity" value="true" />
                    <input type="submit" value="Show Products with Low Quantity" />
                </p>
            </form>
            <a asp-action="Download" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">
                <i class="fas fa-download fa-sm text-white-50"></i> Download Products
            </a>
            <a asp-action="Create" class="d-none d-sm-inline-block btn btn-sm btn-primary shadow-sm">Create New</a>



        </div>
    </div>
    <table class="table">
        <thead>
            <tr>
                <th>Product's Name</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Product Code</th>
                
                <th>Product Img</th>

                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            <form asp-action="UpdateMultiple" method="post">
                <input type="hidden" name="inStock" value="@(isOutOfStockPage ? "true" : "false")" />
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                            @Html.DisplayFor(modelItem => item.ProductName)
                        <input type="checkbox" name="productIds" value="@item.ProductID" />
                        <br />
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.Price) $
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                            @Html.DisplayFor(modelItem => item.ProductCode)
                    </td>
                    
                    <td>
                        <img src="@Url.Content("~/img/" + item.ProductImg)" alt="Product Image" />
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.ProductID" style="background-color: #0099FF;" class="link-edit">Edit</a> |
                        <a asp-action="Details" asp-route-id="@item.ProductID" style="background-color: #0033CC;" class="link-details">Details</a>

                    </td>
                </tr>
                }
            <input class="button-container" type="submit" value="@(isOutOfStockPage ? "Set Products Available" : "Set Products Not Available")" />
            </form>
        </tbody>
    </table>
    <div class="pagination">
        @if (Model.HasPreviousPage)
        {
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex - 1)">Previous</a>
        }
        else
        {
            <span>Previous</span>
        }

        <span> @Model.PageIndex </span>

        @if (Model.HasNextPage)
        {
            <a asp-action="Index" asp-route-pageNumber="@(Model.PageIndex + 1)">Next</a>
        }
        else
        {
            <span> Next</span>
        }

    </div>
    <div class="button-container">
        <div class="back-btn">
            <div class="submit-btn">
                <div class="input-data">
                    <div class="inner"></div>
                    <a asp-action="Index" class="btn btn-primary">Back to List</a>
                </div>
            </div>
        </div>
    </div>
</div>